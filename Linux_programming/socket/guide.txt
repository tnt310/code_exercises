----------------socket programming-----------------------

1. Desktop UI
- Scan device in local network and show device information on ui (broadcast or multicast)
- Allow configures: IP(DHCP or static), NETMASK, DEFAULT GATEWAY

2. Raspberry firmaware
- Respond desktop ui message
- Configure parameters

--------------IPC, multithread, race condition------------------------------

1. Brief
Create three threads: Modbus RTU, socket client, socket server
- Modbus RTU: Read data from simulator
- socket client: transfer data to socket server
- socket server: listen, accept connection and read data from client

2. Implemention
- Modbus RTU + socket client: maybe Desktop UI (client simulator on desktop)
- socket server: save data in database, chart on grafana

-----------Process, Multithread, IPC-------------------------------------------

1. Brief
- Server in listening mode, accept connection and process request from client
- Server: 2 process (1: Qt application with some fuctions, 2: Grafana)
- Client: 2 process (1: uplink packet, 2: downlink packet)

2. Implemention

2.1 Server

- Process for all connection from server

2.2 Client
- Uplink flow: Read data and send to server
- Downlink flow: Receive and excute request
